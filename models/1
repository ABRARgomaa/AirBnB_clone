#!/usr/bin/python3

import uuid
from datetime import datetime

class BaseModel:
    """BaseModel class"""
    def __init__(self, *args, **kwargs):
        """Initialize a new instance"""
        from models import storage
        if kwargs:
            for key, value in kwargs.items():
                if key != '__class__':
                    if key in ['created_at', 'updated_at'] and isinstance(value, str):
                        value = datetime.strptime(value, "%Y-%m-%dT%H:%M:%S.%f")
                    setattr(self, key, value)
            if 'id' not in kwargs:
                self.id = str(uuid.uuid4())
            if 'created_at' not in kwargs:
                self.created_at = datetime.now()
            self.updated_at = datetime.now()
        else:
            self.id = str(uuid.uuid4())
            self.created_at = datetime.now()
            self.updated_at = datetime.now()
            storage.new(self)

        def __str__(self):
            """Return a string"""
            return f"[{self.__class__.__name__}] ({self.id}) {self.__dict__}"

        def save(self):
            """Save and update"""
            from models import storage
            self.updated_at = datetime.now()
            storage.save()

